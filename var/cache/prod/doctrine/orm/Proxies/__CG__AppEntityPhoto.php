<?php

namespace Proxies\__CG__\App\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Photo extends \App\Entity\Photo implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
  'contentUrl' => NULL,
  'size' => NULL,
  'mimeType' => NULL,
  'url' => NULL,
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
  'contentUrl' => NULL,
  'size' => NULL,
  'mimeType' => NULL,
  'url' => NULL,
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {
        unset($this->contentUrl, $this->size, $this->mimeType, $this->url);

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }

    /**
     * 
     * @param string $name
     */
    public function __get($name)
    {
        if (\array_key_exists($name, self::$lazyPropertiesNames)) {
            $this->__initializer__ && $this->__initializer__->__invoke($this, '__get', [$name]);

            return $this->$name;
        }

        trigger_error(sprintf('Undefined property: %s::$%s', __CLASS__, $name), E_USER_NOTICE);
    }

    /**
     * 
     * @param string $name
     * @param mixed  $value
     */
    public function __set($name, $value)
    {
        if (\array_key_exists($name, self::$lazyPropertiesNames)) {
            $this->__initializer__ && $this->__initializer__->__invoke($this, '__set', [$name, $value]);

            $this->$name = $value;

            return;
        }

        $this->$name = $value;
    }

    /**
     * 
     * @param  string $name
     * @return boolean
     */
    public function __isset($name)
    {
        if (\array_key_exists($name, self::$lazyPropertiesNames)) {
            $this->__initializer__ && $this->__initializer__->__invoke($this, '__isset', [$name]);

            return isset($this->$name);
        }

        return false;
    }

    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', 'vichUploaderDirectoryName', '' . "\0" . 'App\\Entity\\Photo' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Photo' . "\0" . 'userId', '' . "\0" . 'App\\Entity\\Photo' . "\0" . 'userEmail', '' . "\0" . 'App\\Entity\\Photo' . "\0" . 'userPseudo', '' . "\0" . 'App\\Entity\\Photo' . "\0" . 'originalName', '' . "\0" . 'App\\Entity\\Photo' . "\0" . 'dateShot', '' . "\0" . 'App\\Entity\\Photo' . "\0" . 'latitude', '' . "\0" . 'App\\Entity\\Photo' . "\0" . 'longitude', '' . "\0" . 'App\\Entity\\Photo' . "\0" . 'dateCreated', '' . "\0" . 'App\\Entity\\Photo' . "\0" . 'dateUpdated', '' . "\0" . 'App\\Entity\\Photo' . "\0" . 'dateLinkedToOccurrence', 'file', 'json', 'jsonData', 'contentUrl', 'size', 'mimeType', 'url', 'photoTagRelations', '' . "\0" . 'App\\Entity\\Photo' . "\0" . 'occurrence'];
        }

        return ['__isInitialized__', 'vichUploaderDirectoryName', '' . "\0" . 'App\\Entity\\Photo' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Photo' . "\0" . 'userId', '' . "\0" . 'App\\Entity\\Photo' . "\0" . 'userEmail', '' . "\0" . 'App\\Entity\\Photo' . "\0" . 'userPseudo', '' . "\0" . 'App\\Entity\\Photo' . "\0" . 'originalName', '' . "\0" . 'App\\Entity\\Photo' . "\0" . 'dateShot', '' . "\0" . 'App\\Entity\\Photo' . "\0" . 'latitude', '' . "\0" . 'App\\Entity\\Photo' . "\0" . 'longitude', '' . "\0" . 'App\\Entity\\Photo' . "\0" . 'dateCreated', '' . "\0" . 'App\\Entity\\Photo' . "\0" . 'dateUpdated', '' . "\0" . 'App\\Entity\\Photo' . "\0" . 'dateLinkedToOccurrence', 'file', 'json', 'jsonData', 'photoTagRelations', '' . "\0" . 'App\\Entity\\Photo' . "\0" . 'occurrence'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Photo $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

            unset($this->contentUrl, $this->size, $this->mimeType, $this->url);
        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function fillPropertiesWithImageExif()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'fillPropertiesWithImageExif', []);

        return parent::fillPropertiesWithImageExif();
    }

    /**
     * {@inheritDoc}
     */
    public function fillPropertiesFromJsonFile($jsonPath, $forbiddenKeys)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'fillPropertiesFromJsonFile', [$jsonPath, $forbiddenKeys]);

        return parent::fillPropertiesFromJsonFile($jsonPath, $forbiddenKeys);
    }

    /**
     * {@inheritDoc}
     */
    public function onPreUpdate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'onPreUpdate', []);

        return parent::onPreUpdate();
    }

    /**
     * {@inheritDoc}
     */
    public function getId(): ?int
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getUserId(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUserId', []);

        return parent::getUserId();
    }

    /**
     * {@inheritDoc}
     */
    public function setUserId(?int $userId): \App\Entity\OwnedEntitySimpleInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUserId', [$userId]);

        return parent::setUserId($userId);
    }

    /**
     * {@inheritDoc}
     */
    public function getUserEmail(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUserEmail', []);

        return parent::getUserEmail();
    }

    /**
     * {@inheritDoc}
     */
    public function setUserEmail(?string $userEmail): \App\Entity\OwnedEntityFullInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUserEmail', [$userEmail]);

        return parent::setUserEmail($userEmail);
    }

    /**
     * {@inheritDoc}
     */
    public function getUserPseudo(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUserPseudo', []);

        return parent::getUserPseudo();
    }

    /**
     * {@inheritDoc}
     */
    public function setUserPseudo(?string $userPseudo): \App\Entity\OwnedEntityFullInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUserPseudo', [$userPseudo]);

        return parent::setUserPseudo($userPseudo);
    }

    /**
     * {@inheritDoc}
     */
    public function getOriginalName(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOriginalName', []);

        return parent::getOriginalName();
    }

    /**
     * {@inheritDoc}
     */
    public function getLatitude(): ?float
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLatitude', []);

        return parent::getLatitude();
    }

    /**
     * {@inheritDoc}
     */
    public function getLongitude(): ?float
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLongitude', []);

        return parent::getLongitude();
    }

    /**
     * {@inheritDoc}
     */
    public function setOriginalName(?string $originalName): \App\Entity\Photo
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOriginalName', [$originalName]);

        return parent::setOriginalName($originalName);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateShot(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateShot', []);

        return parent::getDateShot();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateShot(?\DateTimeInterface $dateShot): \App\Entity\Photo
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateShot', [$dateShot]);

        return parent::setDateShot($dateShot);
    }

    /**
     * {@inheritDoc}
     */
    public function getFormattedDateShot(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFormattedDateShot', []);

        return parent::getFormattedDateShot();
    }

    /**
     * {@inheritDoc}
     */
    public function getDateShotMonth(): ?float
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateShotMonth', []);

        return parent::getDateShotMonth();
    }

    /**
     * {@inheritDoc}
     */
    public function getDateShotYear(): ?float
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateShotYear', []);

        return parent::getDateShotYear();
    }

    /**
     * {@inheritDoc}
     */
    public function getDateShotDay(): ?float
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateShotDay', []);

        return parent::getDateShotDay();
    }

    /**
     * {@inheritDoc}
     */
    public function getDateCreated(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateCreated', []);

        return parent::getDateCreated();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateCreated(?\DateTimeInterface $dateCreated): \App\Entity\TimestampedEntityInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateCreated', [$dateCreated]);

        return parent::setDateCreated($dateCreated);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateUpdated(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateUpdated', []);

        return parent::getDateUpdated();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateUpdated(?\DateTimeInterface $dateUpdated): \App\Entity\TimestampedEntityInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateUpdated', [$dateUpdated]);

        return parent::setDateUpdated($dateUpdated);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateLinkedToOccurrence(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateLinkedToOccurrence', []);

        return parent::getDateLinkedToOccurrence();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateLinkedToOccurrence(?\DateTimeInterface $dateLinkedToOccurrence): \App\Entity\Photo
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateLinkedToOccurrence', [$dateLinkedToOccurrence]);

        return parent::setDateLinkedToOccurrence($dateLinkedToOccurrence);
    }

    /**
     * {@inheritDoc}
     */
    public function getFormattedDateCreated(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFormattedDateCreated', []);

        return parent::getFormattedDateCreated();
    }

    /**
     * {@inheritDoc}
     */
    public function getFormattedDateUpdated(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFormattedDateUpdated', []);

        return parent::getFormattedDateUpdated();
    }

    /**
     * {@inheritDoc}
     */
    public function getPhotoTags()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPhotoTags', []);

        return parent::getPhotoTags();
    }

    /**
     * {@inheritDoc}
     */
    public function addPhotoTag(\App\Entity\PhotoTag $photoTag): \App\Entity\Photo
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addPhotoTag', [$photoTag]);

        return parent::addPhotoTag($photoTag);
    }

    /**
     * {@inheritDoc}
     */
    public function removePhotoTag(\App\Entity\PhotoTag $photoTag): \App\Entity\Photo
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removePhotoTag', [$photoTag]);

        return parent::removePhotoTag($photoTag);
    }

    /**
     * {@inheritDoc}
     */
    public function getOccurrence(): ?\App\Entity\Occurrence
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOccurrence', []);

        return parent::getOccurrence();
    }

    /**
     * {@inheritDoc}
     */
    public function setOccurrence(?\App\Entity\Occurrence $occurrence): \App\Entity\Photo
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOccurrence', [$occurrence]);

        return parent::setOccurrence($occurrence);
    }

    /**
     * {@inheritDoc}
     */
    public function getContentUrl(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getContentUrl', []);

        return parent::getContentUrl();
    }

    /**
     * {@inheritDoc}
     */
    public function getContentUrls(): ?array
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getContentUrls', []);

        return parent::getContentUrls();
    }

    /**
     * {@inheritDoc}
     */
    public function getMimeType(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMimeType', []);

        return parent::getMimeType();
    }

    /**
     * {@inheritDoc}
     */
    public function setMimeType(?string $mimeType): \App\Entity\Photo
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMimeType', [$mimeType]);

        return parent::setMimeType($mimeType);
    }

    /**
     * {@inheritDoc}
     */
    public function getSize(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSize', []);

        return parent::getSize();
    }

    /**
     * {@inheritDoc}
     */
    public function setSize(?int $size): \App\Entity\Photo
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSize', [$size]);

        return parent::setSize($size);
    }

    /**
     * {@inheritDoc}
     */
    public function setLatitude(?float $latitude): \App\Entity\Photo
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLatitude', [$latitude]);

        return parent::setLatitude($latitude);
    }

    /**
     * {@inheritDoc}
     */
    public function setLongitude(?float $longitude): \App\Entity\Photo
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLongitude', [$longitude]);

        return parent::setLongitude($longitude);
    }

    /**
     * {@inheritDoc}
     */
    public function setContentUrl(?string $contentUrl): \App\Entity\Photo
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setContentUrl', [$contentUrl]);

        return parent::setContentUrl($contentUrl);
    }

    /**
     * {@inheritDoc}
     */
    public function getUrl(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUrl', []);

        return parent::getUrl();
    }

    /**
     * {@inheritDoc}
     */
    public function getMiniatureUrl(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMiniatureUrl', []);

        return parent::getMiniatureUrl();
    }

    /**
     * {@inheritDoc}
     */
    public function setUrl(?string $url): \App\Entity\Photo
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUrl', [$url]);

        return parent::setUrl($url);
    }

    /**
     * {@inheritDoc}
     */
    public function getPhotoTagRelations(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPhotoTagRelations', []);

        return parent::getPhotoTagRelations();
    }

    /**
     * {@inheritDoc}
     */
    public function addPhotoTagRelation(\App\Entity\PhotoPhotoTagRelation $photoTagRelation): \App\Entity\Photo
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addPhotoTagRelation', [$photoTagRelation]);

        return parent::addPhotoTagRelation($photoTagRelation);
    }

    /**
     * {@inheritDoc}
     */
    public function removePhotoTagRelation(\App\Entity\PhotoPhotoTagRelation $photoTagRelation): \App\Entity\Photo
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removePhotoTagRelation', [$photoTagRelation]);

        return parent::removePhotoTagRelation($photoTagRelation);
    }

}
