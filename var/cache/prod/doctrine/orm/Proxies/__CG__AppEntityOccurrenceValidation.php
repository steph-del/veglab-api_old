<?php

namespace Proxies\__CG__\App\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class OccurrenceValidation extends \App\Entity\OccurrenceValidation implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'App\\Entity\\OccurrenceValidation' . "\0" . 'id', '' . "\0" . 'App\\Entity\\OccurrenceValidation' . "\0" . 'occurrence', '' . "\0" . 'App\\Entity\\OccurrenceValidation' . "\0" . 'validatedBy', '' . "\0" . 'App\\Entity\\OccurrenceValidation' . "\0" . 'validatedAt', '' . "\0" . 'App\\Entity\\OccurrenceValidation' . "\0" . 'updatedBy', '' . "\0" . 'App\\Entity\\OccurrenceValidation' . "\0" . 'updatedAt', '' . "\0" . 'App\\Entity\\OccurrenceValidation' . "\0" . 'repository', '' . "\0" . 'App\\Entity\\OccurrenceValidation' . "\0" . 'repositoryIdNomen', '' . "\0" . 'App\\Entity\\OccurrenceValidation' . "\0" . 'repositoryIdTaxo', '' . "\0" . 'App\\Entity\\OccurrenceValidation' . "\0" . 'inputName', '' . "\0" . 'App\\Entity\\OccurrenceValidation' . "\0" . 'validatedName', '' . "\0" . 'App\\Entity\\OccurrenceValidation' . "\0" . 'validName', '' . "\0" . 'App\\Entity\\OccurrenceValidation' . "\0" . 'syntheticColumn', '' . "\0" . 'App\\Entity\\OccurrenceValidation' . "\0" . '_table', '' . "\0" . 'App\\Entity\\OccurrenceValidation' . "\0" . 'sye'];
        }

        return ['__isInitialized__', '' . "\0" . 'App\\Entity\\OccurrenceValidation' . "\0" . 'id', '' . "\0" . 'App\\Entity\\OccurrenceValidation' . "\0" . 'occurrence', '' . "\0" . 'App\\Entity\\OccurrenceValidation' . "\0" . 'validatedBy', '' . "\0" . 'App\\Entity\\OccurrenceValidation' . "\0" . 'validatedAt', '' . "\0" . 'App\\Entity\\OccurrenceValidation' . "\0" . 'updatedBy', '' . "\0" . 'App\\Entity\\OccurrenceValidation' . "\0" . 'updatedAt', '' . "\0" . 'App\\Entity\\OccurrenceValidation' . "\0" . 'repository', '' . "\0" . 'App\\Entity\\OccurrenceValidation' . "\0" . 'repositoryIdNomen', '' . "\0" . 'App\\Entity\\OccurrenceValidation' . "\0" . 'repositoryIdTaxo', '' . "\0" . 'App\\Entity\\OccurrenceValidation' . "\0" . 'inputName', '' . "\0" . 'App\\Entity\\OccurrenceValidation' . "\0" . 'validatedName', '' . "\0" . 'App\\Entity\\OccurrenceValidation' . "\0" . 'validName', '' . "\0" . 'App\\Entity\\OccurrenceValidation' . "\0" . 'syntheticColumn', '' . "\0" . 'App\\Entity\\OccurrenceValidation' . "\0" . '_table', '' . "\0" . 'App\\Entity\\OccurrenceValidation' . "\0" . 'sye'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (OccurrenceValidation $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId(): ?int
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getOccurrence(): ?\App\Entity\Occurrence
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOccurrence', []);

        return parent::getOccurrence();
    }

    /**
     * {@inheritDoc}
     */
    public function setOccurrence(?\App\Entity\Occurrence $occurrence): \App\Entity\OccurrenceValidation
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOccurrence', [$occurrence]);

        return parent::setOccurrence($occurrence);
    }

    /**
     * {@inheritDoc}
     */
    public function getValidatedBy(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getValidatedBy', []);

        return parent::getValidatedBy();
    }

    /**
     * {@inheritDoc}
     */
    public function setValidatedBy(?int $userId): \App\Entity\OccurrenceValidation
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setValidatedBy', [$userId]);

        return parent::setValidatedBy($userId);
    }

    /**
     * {@inheritDoc}
     */
    public function getValidatedAt(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getValidatedAt', []);

        return parent::getValidatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setValidatedAt(\DateTimeInterface $date): \App\Entity\OccurrenceValidation
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setValidatedAt', [$date]);

        return parent::setValidatedAt($date);
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdatedBy(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdatedBy', []);

        return parent::getUpdatedBy();
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdatedBy(?int $userId): \App\Entity\OccurrenceValidation
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdatedBy', [$userId]);

        return parent::setUpdatedBy($userId);
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdatedAt(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdatedAt', []);

        return parent::getUpdatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdtaedAt(?\DateTimeInterface $date): \App\Entity\OccurrenceValidation
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdtaedAt', [$date]);

        return parent::setUpdtaedAt($date);
    }

    /**
     * {@inheritDoc}
     */
    public function getRepository(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRepository', []);

        return parent::getRepository();
    }

    /**
     * {@inheritDoc}
     */
    public function setRepository(?string $repository): \App\Entity\OccurrenceValidation
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRepository', [$repository]);

        return parent::setRepository($repository);
    }

    /**
     * {@inheritDoc}
     */
    public function getRepositoryIdNomen(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRepositoryIdNomen', []);

        return parent::getRepositoryIdNomen();
    }

    /**
     * {@inheritDoc}
     */
    public function setRepositoryIdNomen(?int $idNomen): \App\Entity\OccurrenceValidation
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRepositoryIdNomen', [$idNomen]);

        return parent::setRepositoryIdNomen($idNomen);
    }

    /**
     * {@inheritDoc}
     */
    public function getRepositoryIdTaxo(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRepositoryIdTaxo', []);

        return parent::getRepositoryIdTaxo();
    }

    /**
     * {@inheritDoc}
     */
    public function setRepositoryIdTaxo(?string $idTaxo): \App\Entity\OccurrenceValidation
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRepositoryIdTaxo', [$idTaxo]);

        return parent::setRepositoryIdTaxo($idTaxo);
    }

    /**
     * {@inheritDoc}
     */
    public function getInputName(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getInputName', []);

        return parent::getInputName();
    }

    /**
     * {@inheritDoc}
     */
    public function setInputName(?string $name): \App\Entity\OccurrenceValidation
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setInputName', [$name]);

        return parent::setInputName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getValidatedName(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getValidatedName', []);

        return parent::getValidatedName();
    }

    /**
     * {@inheritDoc}
     */
    public function setValidatedName(?string $name): \App\Entity\OccurrenceValidation
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setValidatedName', [$name]);

        return parent::setValidatedName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getValidName(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getValidName', []);

        return parent::getValidName();
    }

    /**
     * {@inheritDoc}
     */
    public function setValidName(?string $name): \App\Entity\OccurrenceValidation
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setValidName', [$name]);

        return parent::setValidName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getSyntheticColumn(): ?\App\Entity\SyntheticColumn
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSyntheticColumn', []);

        return parent::getSyntheticColumn();
    }

    /**
     * {@inheritDoc}
     */
    public function setSyntheticColumn(?\App\Entity\SyntheticColumn $syntheticColumn): \App\Entity\OccurrenceValidation
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSyntheticColumn', [$syntheticColumn]);

        return parent::setSyntheticColumn($syntheticColumn);
    }

    /**
     * {@inheritDoc}
     */
    public function getTable(): ?\App\Entity\Table
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTable', []);

        return parent::getTable();
    }

    /**
     * {@inheritDoc}
     */
    public function setTable(?\App\Entity\Table $_table): \App\Entity\OccurrenceValidation
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTable', [$_table]);

        return parent::setTable($_table);
    }

    /**
     * {@inheritDoc}
     */
    public function getSye(): ?\App\Entity\Sye
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSye', []);

        return parent::getSye();
    }

    /**
     * {@inheritDoc}
     */
    public function setSye(?\App\Entity\Sye $sye): \App\Entity\OccurrenceValidation
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSye', [$sye]);

        return parent::setSye($sye);
    }

}
