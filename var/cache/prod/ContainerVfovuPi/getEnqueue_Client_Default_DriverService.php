<?php

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

// This file has been auto-generated by the Symfony Dependency Injection Component for internal use.
// Returns the private 'enqueue.client.default.driver' shared service.

include_once \dirname(__DIR__, 4).'/vendor/enqueue/enqueue/Client/DriverInterface.php';
include_once \dirname(__DIR__, 4).'/vendor/enqueue/enqueue/Client/DriverFactoryInterface.php';
include_once \dirname(__DIR__, 4).'/vendor/enqueue/enqueue/Doctrine/DoctrineDriverFactory.php';
include_once \dirname(__DIR__, 4).'/vendor/enqueue/enqueue/Client/Config.php';
include_once \dirname(__DIR__, 4).'/vendor/enqueue/enqueue/Client/RouteCollection.php';
include_once \dirname(__DIR__, 4).'/vendor/enqueue/enqueue/Client/DriverFactory.php';

return $this->privates['enqueue.client.default.driver'] = (new \Enqueue\Doctrine\DoctrineDriverFactory(new \Enqueue\Client\DriverFactory()))->create(($this->privates['enqueue.transport.default.connection_factory'] ?? $this->load('getEnqueue_Transport_Default_ConnectionFactoryService.php')), new \Enqueue\Client\Config('enqueue', '.', 'app', 'default', 'default', 'default', 'enqueue.client.default.router_processor', ['dsn' => $this->getEnv('resolve:ENQUEUE_DSN')], []), \Enqueue\Client\RouteCollection::fromArray([0 => ['queue' => 'fos_elastica_populate', 'prefix_queue' => false, 'exclusive' => true, 'processor_service_id' => 'enqueue_elastica.populate_processor', 'source' => 'fos_elastica_populate', 'source_type' => 'enqueue.client.command_route', 'processor' => 'enqueue_elastica.populate_processor']]));
