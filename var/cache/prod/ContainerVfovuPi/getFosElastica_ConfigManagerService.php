<?php

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

// This file has been auto-generated by the Symfony Dependency Injection Component for internal use.
// Returns the public 'fos_elastica.config_manager' shared service.

include_once \dirname(__DIR__, 4).'/vendor/friendsofsymfony/elastica-bundle/src/Configuration/ManagerInterface.php';
include_once \dirname(__DIR__, 4).'/vendor/friendsofsymfony/elastica-bundle/src/Configuration/ConfigManager.php';
include_once \dirname(__DIR__, 4).'/vendor/friendsofsymfony/elastica-bundle/src/Configuration/Source/SourceInterface.php';
include_once \dirname(__DIR__, 4).'/vendor/friendsofsymfony/elastica-bundle/src/Configuration/Source/ContainerSource.php';

return $this->services['fos_elastica.config_manager'] = new \FOS\ElasticaBundle\Configuration\ConfigManager([0 => new \FOS\ElasticaBundle\Configuration\Source\ContainerSource(['occurrences' => ['elasticsearch_name' => 'cel2_occurrences', 'reference' => ($this->services['fos_elastica.index.occurrences'] ?? $this->getFosElastica_Index_OccurrencesService()), 'name' => 'occurrences', 'settings' => ['index' => ['analysis' => ['analyzer' => ['occ_analyzer' => ['type' => 'custom', 'tokenizer' => 'keyword', 'filter' => [0 => 'asciifolding', 1 => 'lowercase', 2 => 'french_stem']]], 'normalizer' => ['occ_normalizer' => ['type' => 'custom', 'filter' => [0 => 'asciifolding', 1 => 'lowercase']]]]]], 'type_prototype' => [], 'use_alias' => false, 'types' => ['occurrence' => ['name' => 'occurrence', 'mapping' => ['dynamic_templates' => [], 'properties' => ['id_keyword' => ['type' => 'keyword'], 'geometry' => ['type' => 'geo_shape'], 'centroid' => ['type' => 'geo_point'], 'userId' => ['type' => 'long'], 'projectId' => ['type' => 'long'], 'userEmail' => [], 'userPseudo' => [], 'observer' => [], 'observerInstitution' => [], 'level' => [], 'layer' => [], 'parentId' => [], 'validations' => ['type' => 'nested', 'properties' => ['id' => ['type' => 'long'], 'validatedBy' => ['type' => 'long'], 'validatedAt' => ['type' => 'date', 'format' => 'yyyy-MM-dd HH:mm:ss'], 'updatedBy' => ['type' => 'long'], 'updatedAt' => ['type' => 'date', 'format' => 'yyyy-MM-dd HH:mm:ss'], 'repository' => ['type' => 'text'], 'repositoryIdNomen' => ['type' => 'long'], 'repositoryIdTaxo' => ['type' => 'text'], 'inputName' => ['type' => 'text'], 'validatedName' => ['type' => 'text'], 'validName' => ['type' => 'text'], 'isDiagnosis' => ['type' => 'boolean']]], 'extendedFieldOccurrences' => [], 'flatVlObservers' => [], 'vlObservers' => ['type' => 'nested', 'properties' => ['id' => ['type' => 'long'], 'name' => ['type' => 'text']]], 'coef' => ['type' => 'text'], 'dateObserved' => ['type' => 'date', 'format' => 'yyyy-MM-dd HH:mm:ss'], 'dateObserved_keyword' => ['type' => 'keyword'], 'dateObservedYear' => ['type' => 'long'], 'dateObservedMonth' => ['type' => 'long'], 'dateObservedDay' => ['type' => 'long'], 'dateCreated' => ['type' => 'date', 'format' => 'yyyy-MM-dd HH:mm:ss'], 'dateCreated_keyword' => ['type' => 'keyword'], 'dateUpdated' => ['type' => 'date', 'format' => 'yyyy-MM-dd HH:mm:ss'], 'datePublished' => ['type' => 'date', 'format' => 'yyyy-MM-dd HH:mm:ss'], 'userSciName' => ['type' => 'text'], 'userSciName_keyword' => ['type' => 'keyword', 'normalizer' => 'occ_normalizer'], 'userSciNameId' => ['type' => 'long'], 'acceptedSciName' => [], 'acceptedSciNameId' => ['type' => 'long'], 'family' => ['type' => 'text'], 'family_keyword' => ['type' => 'keyword'], 'plantnetId' => ['type' => 'long'], 'taxoRepo' => ['type' => 'text'], 'certainty' => ['type' => 'text'], 'certainty_keyword' => ['type' => 'keyword'], 'occurrenceType' => [], 'isWild' => ['type' => 'boolean'], 'phenology' => [], 'sampleHerbarium' => ['type' => 'boolean'], 'bibliographySource' => [], 'inputSource' => [], 'isPublic' => ['type' => 'boolean'], 'isPublic_keyword' => ['type' => 'keyword'], 'isVisibleInCel' => ['type' => 'boolean'], 'isVisibleInVegLab' => ['type' => 'boolean'], 'signature' => [], 'elevation' => ['type' => 'integer'], 'elevation_keyword' => ['type' => 'keyword'], 'geodatum' => [], 'locality' => ['type' => 'text'], 'locality_keyword' => ['type' => 'keyword', 'normalizer' => 'occ_normalizer'], 'localityInseeCode' => ['type' => 'text'], 'sublocality' => [], 'environment' => [], 'localityConsistency' => [], 'station' => [], 'publishedLocation' => [], 'locationAccuracy' => [], 'osmCounty' => [], 'osmState' => [], 'osmPostcode' => [], 'osmCountry' => [], 'osmCountryCode' => [], 'osmId' => [], 'osmPlaceId' => [], 'identiplanteScore' => ['type' => 'long'], 'identiplanteScore_keyword' => ['type' => 'keyword'], 'isIdentiplanteValidated' => ['type' => 'boolean'], 'tags' => []]], 'config' => ['persistence' => ['driver' => 'orm', 'model' => 'App\\Entity\\Occurrence', 'provider' => ['batch_size' => 100, 'clear_object_manager' => true, 'debug_logging' => false, 'query_builder_method' => 'createQueryBuilder'], 'finder' => [], 'repository' => 'App\\Elastica\\Repository\\OccurrenceRepository', 'model_to_elastica_transformer' => ['service' => 'app.search.occurrence_to_elastica_transformer'], 'elastica_to_model_transformer' => ['ignore_missing' => true, 'hints' => [], 'hydrate' => true, 'query_builder_method' => 'createQueryBuilder'], 'identifier' => 'id', 'listener' => ['enabled' => true, 'insert' => true, 'update' => true, 'delete' => true, 'flush' => true, 'defer' => false, 'logger' => false], 'persister' => []], 'serializer' => ['groups' => [], 'serialize_null' => false], 'analyzer' => NULL, 'search_analyzer' => NULL, 'dynamic' => NULL, 'date_detection' => NULL, 'dynamic_date_formats' => [], 'numeric_detection' => NULL]]]], 'photos' => ['elasticsearch_name' => 'cel2_photos', 'reference' => ($this->services['fos_elastica.index.photos'] ?? $this->getFosElastica_Index_PhotosService()), 'name' => 'photos', 'settings' => ['index' => ['analysis' => ['analyzer' => ['photo_analyzer' => ['type' => 'custom', 'tokenizer' => 'keyword', 'filter' => [0 => 'asciifolding', 1 => 'lowercase', 2 => 'french_stem']]], 'normalizer' => ['photo_normalizer' => ['type' => 'custom', 'filter' => [0 => 'asciifolding', 1 => 'lowercase']]]]]], 'type_prototype' => [], 'use_alias' => false, 'types' => ['photo' => ['name' => 'photo', 'mapping' => ['dynamic_templates' => [], 'properties' => ['userId' => ['type' => 'long'], 'userEmail' => [], 'userPseudo' => [], 'originalName' => [], 'dateShot' => ['type' => 'date', 'format' => 'yyyy-MM-dd HH:mm:ss'], 'dateShot_keyword' => ['type' => 'keyword'], 'dateShotYear' => ['type' => 'long'], 'dateShotMonth' => ['type' => 'long'], 'dateShotDay' => ['type' => 'long'], 'dateObserved' => ['type' => 'date', 'format' => 'yyyy-MM-dd HH:mm:ss'], 'dateObservedYear' => ['type' => 'long'], 'dateObservedMonth' => ['type' => 'long'], 'dateObservedDay' => ['type' => 'long'], 'dateCreated' => ['type' => 'date', 'format' => 'yyyy-MM-dd HH:mm:ss'], 'dateCreated_keyword' => ['type' => 'keyword'], 'dateUpdated' => ['type' => 'date', 'format' => 'yyyy-MM-dd HH:mm:ss'], 'userSciName' => [], 'userSciNameId' => ['type' => 'long'], 'family' => ['type' => 'text'], 'family_keyword' => ['type' => 'keyword'], 'certainty' => ['type' => 'text'], 'certainty_keyword' => ['type' => 'keyword'], 'isPublic' => ['type' => 'boolean'], 'locality' => ['type' => 'text'], 'frenchDep' => ['type' => 'long'], 'locality_keyword' => ['type' => 'keyword'], 'osmCounty' => [], 'osmCountry' => [], 'osmCountryCode' => [], 'projectId' => ['type' => 'long'], 'tags' => []]], 'config' => ['persistence' => ['driver' => 'orm', 'model' => 'App\\Entity\\Photo', 'provider' => ['batch_size' => 100, 'clear_object_manager' => true, 'debug_logging' => false, 'query_builder_method' => 'createQueryBuilder'], 'finder' => [], 'repository' => 'App\\Elastica\\Repository\\PhotoRepository', 'model_to_elastica_transformer' => ['service' => 'app.search.photo_to_elastica_transformer'], 'identifier' => 'id', 'listener' => ['enabled' => true, 'insert' => true, 'update' => true, 'delete' => true, 'flush' => true, 'defer' => false, 'logger' => false], 'elastica_to_model_transformer' => ['hints' => [], 'hydrate' => true, 'ignore_missing' => false, 'query_builder_method' => 'createQueryBuilder'], 'persister' => []], 'serializer' => ['groups' => [], 'serialize_null' => false], 'analyzer' => NULL, 'search_analyzer' => NULL, 'dynamic' => NULL, 'date_detection' => NULL, 'dynamic_date_formats' => [], 'numeric_detection' => NULL]]]], 'tables' => ['elasticsearch_name' => 'vl_tables', 'reference' => ($this->services['fos_elastica.index.tables'] ?? $this->getFosElastica_Index_TablesService()), 'name' => 'tables', 'settings' => [], 'type_prototype' => [], 'use_alias' => false, 'types' => ['table' => ['name' => 'table', 'mapping' => ['dynamic_templates' => [], 'properties' => []], 'config' => ['persistence' => ['driver' => 'orm', 'model' => 'App\\Entity\\Table', 'provider' => ['batch_size' => 100, 'clear_object_manager' => true, 'debug_logging' => false, 'query_builder_method' => 'createQueryBuilder'], 'finder' => [], 'repository' => NULL, 'model_to_elastica_transformer' => ['service' => 'app.search.table_to_elastica_transformer'], 'elastica_to_model_transformer' => ['ignore_missing' => true, 'hints' => [], 'hydrate' => true, 'query_builder_method' => 'createQueryBuilder'], 'identifier' => 'id', 'listener' => ['enabled' => true, 'insert' => true, 'update' => true, 'delete' => true, 'flush' => true, 'defer' => false, 'logger' => false], 'persister' => []], 'serializer' => ['groups' => [], 'serialize_null' => false], 'analyzer' => NULL, 'search_analyzer' => NULL, 'dynamic' => NULL, 'date_detection' => NULL, 'dynamic_date_formats' => [], 'numeric_detection' => NULL]]]], 'observers' => ['elasticsearch_name' => 'vl_observers', 'reference' => ($this->services['fos_elastica.index.observers'] ?? $this->getFosElastica_Index_ObserversService()), 'name' => 'observers', 'settings' => [], 'type_prototype' => [], 'use_alias' => false, 'types' => ['observer' => ['name' => 'observer', 'mapping' => ['dynamic_templates' => [], 'properties' => ['id' => [], 'name' => []]], 'config' => ['persistence' => ['driver' => 'orm', 'model' => 'App\\Entity\\Observer', 'provider' => ['batch_size' => 100, 'clear_object_manager' => true, 'debug_logging' => false, 'query_builder_method' => 'createQueryBuilder'], 'finder' => [], 'repository' => NULL, 'elastica_to_model_transformer' => ['ignore_missing' => true, 'hints' => [], 'hydrate' => true, 'query_builder_method' => 'createQueryBuilder'], 'identifier' => 'id', 'listener' => ['enabled' => true, 'insert' => true, 'update' => true, 'delete' => true, 'flush' => true, 'defer' => false, 'logger' => false], 'model_to_elastica_transformer' => [], 'persister' => []], 'serializer' => ['groups' => [], 'serialize_null' => false], 'analyzer' => NULL, 'search_analyzer' => NULL, 'dynamic' => NULL, 'date_detection' => NULL, 'dynamic_date_formats' => [], 'numeric_detection' => NULL]]]], 'biblio_phytos' => ['elasticsearch_name' => 'vl_biblio_phytos', 'reference' => ($this->services['fos_elastica.index.biblio_phytos'] ?? $this->getFosElastica_Index_BiblioPhytosService()), 'name' => 'biblio_phytos', 'settings' => [], 'type_prototype' => [], 'use_alias' => false, 'types' => ['biblio_phyto' => ['name' => 'biblio_phyto', 'mapping' => ['dynamic_templates' => [], 'properties' => ['id' => [], 'title' => []]], 'config' => ['persistence' => ['driver' => 'orm', 'model' => 'App\\Entity\\BiblioPhyto', 'provider' => ['batch_size' => 100, 'clear_object_manager' => true, 'debug_logging' => false, 'query_builder_method' => 'createQueryBuilder'], 'finder' => [], 'repository' => NULL, 'elastica_to_model_transformer' => ['ignore_missing' => true, 'hints' => [], 'hydrate' => true, 'query_builder_method' => 'createQueryBuilder'], 'identifier' => 'id', 'listener' => ['enabled' => true, 'insert' => true, 'update' => true, 'delete' => true, 'flush' => true, 'defer' => false, 'logger' => false], 'model_to_elastica_transformer' => [], 'persister' => []], 'serializer' => ['groups' => [], 'serialize_null' => false], 'analyzer' => NULL, 'search_analyzer' => NULL, 'dynamic' => NULL, 'date_detection' => NULL, 'dynamic_date_formats' => [], 'numeric_detection' => NULL]]]]])]);
