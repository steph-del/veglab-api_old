<?php

namespace Proxies\__CG__\App\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Occurrence extends \App\Entity\Occurrence implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Occurrence' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Occurrence' . "\0" . 'userId', '' . "\0" . 'App\\Entity\\Occurrence' . "\0" . 'level', '' . "\0" . 'App\\Entity\\Occurrence' . "\0" . 'children', '' . "\0" . 'App\\Entity\\Occurrence' . "\0" . 'parent', '' . "\0" . 'App\\Entity\\Occurrence' . "\0" . 'parentLevel', '' . "\0" . 'App\\Entity\\Occurrence' . "\0" . 'layer', '' . "\0" . 'App\\Entity\\Occurrence' . "\0" . 'userEmail', '' . "\0" . 'App\\Entity\\Occurrence' . "\0" . 'userPseudo', '' . "\0" . 'App\\Entity\\Occurrence' . "\0" . 'observer', '' . "\0" . 'App\\Entity\\Occurrence' . "\0" . 'vlObservers', '' . "\0" . 'App\\Entity\\Occurrence' . "\0" . 'vlWorkspace', '' . "\0" . 'App\\Entity\\Occurrence' . "\0" . 'observerInstitution', '' . "\0" . 'App\\Entity\\Occurrence' . "\0" . 'dateObserved', '' . "\0" . 'App\\Entity\\Occurrence' . "\0" . 'dateObservedPrecision', '' . "\0" . 'App\\Entity\\Occurrence' . "\0" . 'dateCreated', '' . "\0" . 'App\\Entity\\Occurrence' . "\0" . 'dateUpdated', '' . "\0" . 'App\\Entity\\Occurrence' . "\0" . 'datePublished', '' . "\0" . 'App\\Entity\\Occurrence' . "\0" . 'userSciName', '' . "\0" . 'App\\Entity\\Occurrence' . "\0" . 'userSciNameId', '' . "\0" . 'App\\Entity\\Occurrence' . "\0" . 'acceptedSciName', '' . "\0" . 'App\\Entity\\Occurrence' . "\0" . 'acceptedSciNameId', '' . "\0" . 'App\\Entity\\Occurrence' . "\0" . 'plantnetId', '' . "\0" . 'App\\Entity\\Occurrence' . "\0" . 'family', '' . "\0" . 'App\\Entity\\Occurrence' . "\0" . 'certainty', '' . "\0" . 'App\\Entity\\Occurrence' . "\0" . 'annotation', '' . "\0" . 'App\\Entity\\Occurrence' . "\0" . 'occurrenceType', '' . "\0" . 'App\\Entity\\Occurrence' . "\0" . 'isWild', '' . "\0" . 'App\\Entity\\Occurrence' . "\0" . 'coef', '' . "\0" . 'App\\Entity\\Occurrence' . "\0" . 'phenology', '' . "\0" . 'App\\Entity\\Occurrence' . "\0" . 'sampleHerbarium', '' . "\0" . 'App\\Entity\\Occurrence' . "\0" . 'bibliographySource', '' . "\0" . 'App\\Entity\\Occurrence' . "\0" . 'vlBiblioSource', '' . "\0" . 'App\\Entity\\Occurrence' . "\0" . 'inputSource', '' . "\0" . 'App\\Entity\\Occurrence' . "\0" . 'isPublic', '' . "\0" . 'App\\Entity\\Occurrence' . "\0" . 'isVisibleInCel', '' . "\0" . 'App\\Entity\\Occurrence' . "\0" . 'isVisibleInVegLab', '' . "\0" . 'App\\Entity\\Occurrence' . "\0" . 'signature', '' . "\0" . 'App\\Entity\\Occurrence' . "\0" . 'geometry', '' . "\0" . 'App\\Entity\\Occurrence' . "\0" . 'centroid', '' . "\0" . 'App\\Entity\\Occurrence' . "\0" . 'elevation', '' . "\0" . 'App\\Entity\\Occurrence' . "\0" . 'isElevationEstimated', '' . "\0" . 'App\\Entity\\Occurrence' . "\0" . 'geodatum', '' . "\0" . 'App\\Entity\\Occurrence' . "\0" . 'locality', '' . "\0" . 'App\\Entity\\Occurrence' . "\0" . 'localityInseeCode', '' . "\0" . 'App\\Entity\\Occurrence' . "\0" . 'sublocality', '' . "\0" . 'App\\Entity\\Occurrence' . "\0" . 'environment', '' . "\0" . 'App\\Entity\\Occurrence' . "\0" . 'localityConsistency', '' . "\0" . 'App\\Entity\\Occurrence' . "\0" . 'station', '' . "\0" . 'App\\Entity\\Occurrence' . "\0" . 'publishedLocation', '' . "\0" . 'App\\Entity\\Occurrence' . "\0" . 'locationAccuracy', '' . "\0" . 'App\\Entity\\Occurrence' . "\0" . 'vlLocationAccuracy', '' . "\0" . 'App\\Entity\\Occurrence' . "\0" . 'osmCounty', '' . "\0" . 'App\\Entity\\Occurrence' . "\0" . 'osmState', '' . "\0" . 'App\\Entity\\Occurrence' . "\0" . 'osmPostcode', '' . "\0" . 'App\\Entity\\Occurrence' . "\0" . 'osmCountry', '' . "\0" . 'App\\Entity\\Occurrence' . "\0" . 'osmCountryCode', '' . "\0" . 'App\\Entity\\Occurrence' . "\0" . 'osmId', '' . "\0" . 'App\\Entity\\Occurrence' . "\0" . 'osmPlaceId', '' . "\0" . 'App\\Entity\\Occurrence' . "\0" . 'identiplanteScore', '' . "\0" . 'App\\Entity\\Occurrence' . "\0" . 'isIdentiplanteValidated', '' . "\0" . 'App\\Entity\\Occurrence' . "\0" . 'identificationAuthor', '' . "\0" . 'App\\Entity\\Occurrence' . "\0" . 'taxoRepo', '' . "\0" . 'App\\Entity\\Occurrence' . "\0" . 'project', '' . "\0" . 'App\\Entity\\Occurrence' . "\0" . 'photos', '' . "\0" . 'App\\Entity\\Occurrence' . "\0" . 'validations', '' . "\0" . 'App\\Entity\\Occurrence' . "\0" . 'delUpdateNotifications', '' . "\0" . 'App\\Entity\\Occurrence' . "\0" . 'extendedFieldOccurrences', '' . "\0" . 'App\\Entity\\Occurrence' . "\0" . 'userCustomFieldOccurrences', 'userTagRelations', '' . "\0" . 'App\\Entity\\Occurrence' . "\0" . 'syes'];
        }

        return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Occurrence' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Occurrence' . "\0" . 'userId', '' . "\0" . 'App\\Entity\\Occurrence' . "\0" . 'level', '' . "\0" . 'App\\Entity\\Occurrence' . "\0" . 'children', '' . "\0" . 'App\\Entity\\Occurrence' . "\0" . 'parent', '' . "\0" . 'App\\Entity\\Occurrence' . "\0" . 'parentLevel', '' . "\0" . 'App\\Entity\\Occurrence' . "\0" . 'layer', '' . "\0" . 'App\\Entity\\Occurrence' . "\0" . 'userEmail', '' . "\0" . 'App\\Entity\\Occurrence' . "\0" . 'userPseudo', '' . "\0" . 'App\\Entity\\Occurrence' . "\0" . 'observer', '' . "\0" . 'App\\Entity\\Occurrence' . "\0" . 'vlObservers', '' . "\0" . 'App\\Entity\\Occurrence' . "\0" . 'vlWorkspace', '' . "\0" . 'App\\Entity\\Occurrence' . "\0" . 'observerInstitution', '' . "\0" . 'App\\Entity\\Occurrence' . "\0" . 'dateObserved', '' . "\0" . 'App\\Entity\\Occurrence' . "\0" . 'dateObservedPrecision', '' . "\0" . 'App\\Entity\\Occurrence' . "\0" . 'dateCreated', '' . "\0" . 'App\\Entity\\Occurrence' . "\0" . 'dateUpdated', '' . "\0" . 'App\\Entity\\Occurrence' . "\0" . 'datePublished', '' . "\0" . 'App\\Entity\\Occurrence' . "\0" . 'userSciName', '' . "\0" . 'App\\Entity\\Occurrence' . "\0" . 'userSciNameId', '' . "\0" . 'App\\Entity\\Occurrence' . "\0" . 'acceptedSciName', '' . "\0" . 'App\\Entity\\Occurrence' . "\0" . 'acceptedSciNameId', '' . "\0" . 'App\\Entity\\Occurrence' . "\0" . 'plantnetId', '' . "\0" . 'App\\Entity\\Occurrence' . "\0" . 'family', '' . "\0" . 'App\\Entity\\Occurrence' . "\0" . 'certainty', '' . "\0" . 'App\\Entity\\Occurrence' . "\0" . 'annotation', '' . "\0" . 'App\\Entity\\Occurrence' . "\0" . 'occurrenceType', '' . "\0" . 'App\\Entity\\Occurrence' . "\0" . 'isWild', '' . "\0" . 'App\\Entity\\Occurrence' . "\0" . 'coef', '' . "\0" . 'App\\Entity\\Occurrence' . "\0" . 'phenology', '' . "\0" . 'App\\Entity\\Occurrence' . "\0" . 'sampleHerbarium', '' . "\0" . 'App\\Entity\\Occurrence' . "\0" . 'bibliographySource', '' . "\0" . 'App\\Entity\\Occurrence' . "\0" . 'vlBiblioSource', '' . "\0" . 'App\\Entity\\Occurrence' . "\0" . 'inputSource', '' . "\0" . 'App\\Entity\\Occurrence' . "\0" . 'isPublic', '' . "\0" . 'App\\Entity\\Occurrence' . "\0" . 'isVisibleInCel', '' . "\0" . 'App\\Entity\\Occurrence' . "\0" . 'isVisibleInVegLab', '' . "\0" . 'App\\Entity\\Occurrence' . "\0" . 'signature', '' . "\0" . 'App\\Entity\\Occurrence' . "\0" . 'geometry', '' . "\0" . 'App\\Entity\\Occurrence' . "\0" . 'centroid', '' . "\0" . 'App\\Entity\\Occurrence' . "\0" . 'elevation', '' . "\0" . 'App\\Entity\\Occurrence' . "\0" . 'isElevationEstimated', '' . "\0" . 'App\\Entity\\Occurrence' . "\0" . 'geodatum', '' . "\0" . 'App\\Entity\\Occurrence' . "\0" . 'locality', '' . "\0" . 'App\\Entity\\Occurrence' . "\0" . 'localityInseeCode', '' . "\0" . 'App\\Entity\\Occurrence' . "\0" . 'sublocality', '' . "\0" . 'App\\Entity\\Occurrence' . "\0" . 'environment', '' . "\0" . 'App\\Entity\\Occurrence' . "\0" . 'localityConsistency', '' . "\0" . 'App\\Entity\\Occurrence' . "\0" . 'station', '' . "\0" . 'App\\Entity\\Occurrence' . "\0" . 'publishedLocation', '' . "\0" . 'App\\Entity\\Occurrence' . "\0" . 'locationAccuracy', '' . "\0" . 'App\\Entity\\Occurrence' . "\0" . 'vlLocationAccuracy', '' . "\0" . 'App\\Entity\\Occurrence' . "\0" . 'osmCounty', '' . "\0" . 'App\\Entity\\Occurrence' . "\0" . 'osmState', '' . "\0" . 'App\\Entity\\Occurrence' . "\0" . 'osmPostcode', '' . "\0" . 'App\\Entity\\Occurrence' . "\0" . 'osmCountry', '' . "\0" . 'App\\Entity\\Occurrence' . "\0" . 'osmCountryCode', '' . "\0" . 'App\\Entity\\Occurrence' . "\0" . 'osmId', '' . "\0" . 'App\\Entity\\Occurrence' . "\0" . 'osmPlaceId', '' . "\0" . 'App\\Entity\\Occurrence' . "\0" . 'identiplanteScore', '' . "\0" . 'App\\Entity\\Occurrence' . "\0" . 'isIdentiplanteValidated', '' . "\0" . 'App\\Entity\\Occurrence' . "\0" . 'identificationAuthor', '' . "\0" . 'App\\Entity\\Occurrence' . "\0" . 'taxoRepo', '' . "\0" . 'App\\Entity\\Occurrence' . "\0" . 'project', '' . "\0" . 'App\\Entity\\Occurrence' . "\0" . 'photos', '' . "\0" . 'App\\Entity\\Occurrence' . "\0" . 'validations', '' . "\0" . 'App\\Entity\\Occurrence' . "\0" . 'delUpdateNotifications', '' . "\0" . 'App\\Entity\\Occurrence' . "\0" . 'extendedFieldOccurrences', '' . "\0" . 'App\\Entity\\Occurrence' . "\0" . 'userCustomFieldOccurrences', 'userTagRelations', '' . "\0" . 'App\\Entity\\Occurrence' . "\0" . 'syes'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Occurrence $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * {@inheritDoc}
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);

        parent::__clone();
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function isPublishable(): ?bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isPublishable', []);

        return parent::isPublishable();
    }

    /**
     * {@inheritDoc}
     */
    public function setId(?int $id): \App\Entity\Occurrence
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setId', [$id]);

        return parent::setId($id);
    }

    /**
     * {@inheritDoc}
     */
    public function getId(): ?int
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getChildren(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getChildren', []);

        return parent::getChildren();
    }

    /**
     * {@inheritDoc}
     */
    public function addChild(\App\Entity\Occurrence $occurrence): \App\Entity\Occurrence
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addChild', [$occurrence]);

        return parent::addChild($occurrence);
    }

    /**
     * {@inheritDoc}
     */
    public function removeChild(\App\Entity\Occurrence $occurrence): \App\Entity\Occurrence
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeChild', [$occurrence]);

        return parent::removeChild($occurrence);
    }

    /**
     * {@inheritDoc}
     */
    public function getParent(): ?\App\Entity\Occurrence
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getParent', []);

        return parent::getParent();
    }

    /**
     * {@inheritDoc}
     */
    public function setParent(?\App\Entity\Occurrence $occurrence): \App\Entity\Occurrence
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setParent', [$occurrence]);

        return parent::setParent($occurrence);
    }

    /**
     * {@inheritDoc}
     */
    public function getLevel(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLevel', []);

        return parent::getLevel();
    }

    /**
     * {@inheritDoc}
     */
    public function setLevel(?string $level): \App\Entity\Occurrence
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLevel', [$level]);

        return parent::setLevel($level);
    }

    /**
     * {@inheritDoc}
     */
    public function getParentLevel(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getParentLevel', []);

        return parent::getParentLevel();
    }

    /**
     * {@inheritDoc}
     */
    public function setParentLevel(?string $parentLevel): \App\Entity\Occurrence
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setParentLevel', [$parentLevel]);

        return parent::setParentLevel($parentLevel);
    }

    /**
     * {@inheritDoc}
     */
    public function getLayer(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLayer', []);

        return parent::getLayer();
    }

    /**
     * {@inheritDoc}
     */
    public function setLayer(?string $layer): \App\Entity\Occurrence
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLayer', [$layer]);

        return parent::setLayer($layer);
    }

    /**
     * {@inheritDoc}
     */
    public function getUserId(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUserId', []);

        return parent::getUserId();
    }

    /**
     * {@inheritDoc}
     */
    public function setUserId(?int $userId): \App\Entity\OwnedEntitySimpleInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUserId', [$userId]);

        return parent::setUserId($userId);
    }

    /**
     * {@inheritDoc}
     */
    public function getUserEmail(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUserEmail', []);

        return parent::getUserEmail();
    }

    /**
     * {@inheritDoc}
     */
    public function setUserEmail(?string $userEmail): \App\Entity\OwnedEntityFullInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUserEmail', [$userEmail]);

        return parent::setUserEmail($userEmail);
    }

    /**
     * {@inheritDoc}
     */
    public function getUserPseudo(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUserPseudo', []);

        return parent::getUserPseudo();
    }

    /**
     * {@inheritDoc}
     */
    public function setUserPseudo(?string $userPseudo): \App\Entity\OwnedEntityFullInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUserPseudo', [$userPseudo]);

        return parent::setUserPseudo($userPseudo);
    }

    /**
     * {@inheritDoc}
     */
    public function getObserver(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getObserver', []);

        return parent::getObserver();
    }

    /**
     * {@inheritDoc}
     */
    public function setObserver(string $observer): \App\Entity\Occurrence
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setObserver', [$observer]);

        return parent::setObserver($observer);
    }

    /**
     * {@inheritDoc}
     */
    public function getObserverInstitution(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getObserverInstitution', []);

        return parent::getObserverInstitution();
    }

    /**
     * {@inheritDoc}
     */
    public function setObserverInstitution(?string $observerInstitution): \App\Entity\Occurrence
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setObserverInstitution', [$observerInstitution]);

        return parent::setObserverInstitution($observerInstitution);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateObserved(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateObserved', []);

        return parent::getDateObserved();
    }

    /**
     * {@inheritDoc}
     */
    public function getDateObservedPrecision(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateObservedPrecision', []);

        return parent::getDateObservedPrecision();
    }

    /**
     * {@inheritDoc}
     */
    public function getFormattedDateObserved(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFormattedDateObserved', []);

        return parent::getFormattedDateObserved();
    }

    /**
     * {@inheritDoc}
     */
    public function getFormattedDateCreated(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFormattedDateCreated', []);

        return parent::getFormattedDateCreated();
    }

    /**
     * {@inheritDoc}
     */
    public function getFormattedDateUpdated(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFormattedDateUpdated', []);

        return parent::getFormattedDateUpdated();
    }

    /**
     * {@inheritDoc}
     */
    public function getFormattedDatePublished(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFormattedDatePublished', []);

        return parent::getFormattedDatePublished();
    }

    /**
     * {@inheritDoc}
     */
    public function getDateObservedMonth(): ?float
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateObservedMonth', []);

        return parent::getDateObservedMonth();
    }

    /**
     * {@inheritDoc}
     */
    public function getDateObservedDay(): ?float
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateObservedDay', []);

        return parent::getDateObservedDay();
    }

    /**
     * {@inheritDoc}
     */
    public function getDateObservedYear(): ?float
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateObservedYear', []);

        return parent::getDateObservedYear();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateObserved(?\DateTimeInterface $dateObserved): \App\Entity\Occurrence
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateObserved', [$dateObserved]);

        return parent::setDateObserved($dateObserved);
    }

    /**
     * {@inheritDoc}
     */
    public function setDateObservedPrecision(?string $dateObservedPrecision): \App\Entity\Occurrence
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateObservedPrecision', [$dateObservedPrecision]);

        return parent::setDateObservedPrecision($dateObservedPrecision);
    }

    /**
     * {@inheritDoc}
     */
    public function setDateCreated(?\DateTimeInterface $dateCreated): \App\Entity\TimestampedEntityInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateCreated', [$dateCreated]);

        return parent::setDateCreated($dateCreated);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateCreated(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateCreated', []);

        return parent::getDateCreated();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateUpdated(?\DateTimeInterface $dateUpdated): \App\Entity\TimestampedEntityInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateUpdated', [$dateUpdated]);

        return parent::setDateUpdated($dateUpdated);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateUpdated(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateUpdated', []);

        return parent::getDateUpdated();
    }

    /**
     * {@inheritDoc}
     */
    public function getDatePublished(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDatePublished', []);

        return parent::getDatePublished();
    }

    /**
     * {@inheritDoc}
     */
    public function setDatePublished(?\DateTimeInterface $datePublished): \App\Entity\Occurrence
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDatePublished', [$datePublished]);

        return parent::setDatePublished($datePublished);
    }

    /**
     * {@inheritDoc}
     */
    public function getUserSciName(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUserSciName', []);

        return parent::getUserSciName();
    }

    /**
     * {@inheritDoc}
     */
    public function setUserSciName(?string $userSciName): \App\Entity\Occurrence
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUserSciName', [$userSciName]);

        return parent::setUserSciName($userSciName);
    }

    /**
     * {@inheritDoc}
     */
    public function getUserSciNameId(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUserSciNameId', []);

        return parent::getUserSciNameId();
    }

    /**
     * {@inheritDoc}
     */
    public function setUserSciNameId(?int $userSciNameId): \App\Entity\Occurrence
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUserSciNameId', [$userSciNameId]);

        return parent::setUserSciNameId($userSciNameId);
    }

    /**
     * {@inheritDoc}
     */
    public function getAcceptedSciName(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAcceptedSciName', []);

        return parent::getAcceptedSciName();
    }

    /**
     * {@inheritDoc}
     */
    public function getAcceptedSciNameId(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAcceptedSciNameId', []);

        return parent::getAcceptedSciNameId();
    }

    /**
     * {@inheritDoc}
     */
    public function setAcceptedSciName(?string $acceptedSciName): \App\Entity\Occurrence
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAcceptedSciName', [$acceptedSciName]);

        return parent::setAcceptedSciName($acceptedSciName);
    }

    /**
     * {@inheritDoc}
     */
    public function setAcceptedSciNameId(?int $acceptedSciNameId): \App\Entity\Occurrence
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAcceptedSciNameId', [$acceptedSciNameId]);

        return parent::setAcceptedSciNameId($acceptedSciNameId);
    }

    /**
     * {@inheritDoc}
     */
    public function getValidSciName(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getValidSciName', []);

        return parent::getValidSciName();
    }

    /**
     * {@inheritDoc}
     */
    public function getCoef(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCoef', []);

        return parent::getCoef();
    }

    /**
     * {@inheritDoc}
     */
    public function setCoef(?string $coef): \App\Entity\Occurrence
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCoef', [$coef]);

        return parent::setCoef($coef);
    }

    /**
     * {@inheritDoc}
     */
    public function setValidSciName(string $validSciName): \App\Entity\Occurrence
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setValidSciName', [$validSciName]);

        return parent::setValidSciName($validSciName);
    }

    /**
     * {@inheritDoc}
     */
    public function getValidSciNameId(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getValidSciNameId', []);

        return parent::getValidSciNameId();
    }

    /**
     * {@inheritDoc}
     */
    public function setValidSciNameId(int $validSciNameId): \App\Entity\Occurrence
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setValidSciNameId', [$validSciNameId]);

        return parent::setValidSciNameId($validSciNameId);
    }

    /**
     * {@inheritDoc}
     */
    public function getPlantnetId(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPlantnetId', []);

        return parent::getPlantnetId();
    }

    /**
     * {@inheritDoc}
     */
    public function setFamily(?string $family): \App\Entity\Occurrence
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFamily', [$family]);

        return parent::setFamily($family);
    }

    /**
     * {@inheritDoc}
     */
    public function getFamily(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFamily', []);

        return parent::getFamily();
    }

    /**
     * {@inheritDoc}
     */
    public function getTaxoRepo(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTaxoRepo', []);

        return parent::getTaxoRepo();
    }

    /**
     * {@inheritDoc}
     */
    public function setTaxoRepo(?string $taxoRepo): \App\Entity\Occurrence
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTaxoRepo', [$taxoRepo]);

        return parent::setTaxoRepo($taxoRepo);
    }

    /**
     * {@inheritDoc}
     */
    public function getPhenology(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPhenology', []);

        return parent::getPhenology();
    }

    /**
     * {@inheritDoc}
     */
    public function setPhenology($phenology): \App\Entity\Occurrence
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPhenology', [$phenology]);

        return parent::setPhenology($phenology);
    }

    /**
     * {@inheritDoc}
     */
    public function getCertainty(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCertainty', []);

        return parent::getCertainty();
    }

    /**
     * {@inheritDoc}
     */
    public function setCertainty(?string $certainty): \App\Entity\Occurrence
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCertainty', [$certainty]);

        return parent::setCertainty($certainty);
    }

    /**
     * {@inheritDoc}
     */
    public function getAnnotation(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAnnotation', []);

        return parent::getAnnotation();
    }

    /**
     * {@inheritDoc}
     */
    public function setAnnotation(?string $annotation): \App\Entity\Occurrence
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAnnotation', [$annotation]);

        return parent::setAnnotation($annotation);
    }

    /**
     * {@inheritDoc}
     */
    public function getOccurrenceType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOccurrenceType', []);

        return parent::getOccurrenceType();
    }

    /**
     * {@inheritDoc}
     */
    public function setOccurrenceType($occurrenceType): \App\Entity\Occurrence
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOccurrenceType', [$occurrenceType]);

        return parent::setOccurrenceType($occurrenceType);
    }

    /**
     * {@inheritDoc}
     */
    public function getIsWild(): ?bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsWild', []);

        return parent::getIsWild();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsWild(?bool $isWild): \App\Entity\Occurrence
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsWild', [$isWild]);

        return parent::setIsWild($isWild);
    }

    /**
     * {@inheritDoc}
     */
    public function getIndividualCount(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIndividualCount', []);

        return parent::getIndividualCount();
    }

    /**
     * {@inheritDoc}
     */
    public function setIndividualCount(int $individualCount): \App\Entity\Occurrence
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIndividualCount', [$individualCount]);

        return parent::setIndividualCount($individualCount);
    }

    /**
     * {@inheritDoc}
     */
    public function getSampleHerbarium(): ?bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSampleHerbarium', []);

        return parent::getSampleHerbarium();
    }

    /**
     * {@inheritDoc}
     */
    public function setSampleHerbarium(?bool $sampleHerbarium): \App\Entity\Occurrence
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSampleHerbarium', [$sampleHerbarium]);

        return parent::setSampleHerbarium($sampleHerbarium);
    }

    /**
     * {@inheritDoc}
     */
    public function setBibliographySource(?string $bibliographySource): \App\Entity\Occurrence
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBibliographySource', [$bibliographySource]);

        return parent::setBibliographySource($bibliographySource);
    }

    /**
     * {@inheritDoc}
     */
    public function getBibliographySource()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBibliographySource', []);

        return parent::getBibliographySource();
    }

    /**
     * {@inheritDoc}
     */
    public function getInputSource()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getInputSource', []);

        return parent::getInputSource();
    }

    /**
     * {@inheritDoc}
     */
    public function setInputSource($inputSource): \App\Entity\Occurrence
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setInputSource', [$inputSource]);

        return parent::setInputSource($inputSource);
    }

    /**
     * {@inheritDoc}
     */
    public function getIsPublic(): ?bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsPublic', []);

        return parent::getIsPublic();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsPublic(bool $isPublic): \App\Entity\Occurrence
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsPublic', [$isPublic]);

        return parent::setIsPublic($isPublic);
    }

    /**
     * {@inheritDoc}
     */
    public function getIsVisibleInCel(): ?bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsVisibleInCel', []);

        return parent::getIsVisibleInCel();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsVisibleInCel(bool $isVisibleInCel): \App\Entity\Occurrence
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsVisibleInCel', [$isVisibleInCel]);

        return parent::setIsVisibleInCel($isVisibleInCel);
    }

    /**
     * {@inheritDoc}
     */
    public function getIsVisibleInVegLab(): ?bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsVisibleInVegLab', []);

        return parent::getIsVisibleInVegLab();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsVisibleInVegLab(bool $isVisibleInVegLab): \App\Entity\Occurrence
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsVisibleInVegLab', [$isVisibleInVegLab]);

        return parent::setIsVisibleInVegLab($isVisibleInVegLab);
    }

    /**
     * {@inheritDoc}
     */
    public function getSignature(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSignature', []);

        return parent::getSignature();
    }

    /**
     * {@inheritDoc}
     */
    public function getGeodatum(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGeodatum', []);

        return parent::getGeodatum();
    }

    /**
     * {@inheritDoc}
     */
    public function setGeodatum(?string $geodatum): \App\Entity\Occurrence
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setGeodatum', [$geodatum]);

        return parent::setGeodatum($geodatum);
    }

    /**
     * {@inheritDoc}
     */
    public function getLocalityConsistency(): ?bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLocalityConsistency', []);

        return parent::getLocalityConsistency();
    }

    /**
     * {@inheritDoc}
     */
    public function setLocalityConsistency(?bool $localityConsistency): \App\Entity\Occurrence
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLocalityConsistency', [$localityConsistency]);

        return parent::setLocalityConsistency($localityConsistency);
    }

    /**
     * {@inheritDoc}
     */
    public function getLocality(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLocality', []);

        return parent::getLocality();
    }

    /**
     * {@inheritDoc}
     */
    public function setLocality(?string $locality): \App\Entity\Occurrence
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLocality', [$locality]);

        return parent::setLocality($locality);
    }

    /**
     * {@inheritDoc}
     */
    public function getLocalityInseeCode(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLocalityInseeCode', []);

        return parent::getLocalityInseeCode();
    }

    /**
     * {@inheritDoc}
     */
    public function setLocalityInseeCode(?string $localityInseeCode): \App\Entity\Occurrence
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLocalityInseeCode', [$localityInseeCode]);

        return parent::setLocalityInseeCode($localityInseeCode);
    }

    /**
     * {@inheritDoc}
     */
    public function getSublocality(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSublocality', []);

        return parent::getSublocality();
    }

    /**
     * {@inheritDoc}
     */
    public function setSublocality(?string $sublocality): \App\Entity\Occurrence
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSublocality', [$sublocality]);

        return parent::setSublocality($sublocality);
    }

    /**
     * {@inheritDoc}
     */
    public function getEnvironment(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEnvironment', []);

        return parent::getEnvironment();
    }

    /**
     * {@inheritDoc}
     */
    public function setEnvironment(?string $environment): \App\Entity\Occurrence
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEnvironment', [$environment]);

        return parent::setEnvironment($environment);
    }

    /**
     * {@inheritDoc}
     */
    public function getStation(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStation', []);

        return parent::getStation();
    }

    /**
     * {@inheritDoc}
     */
    public function setStation(?string $station): \App\Entity\Occurrence
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStation', [$station]);

        return parent::setStation($station);
    }

    /**
     * {@inheritDoc}
     */
    public function getPublishedLocation()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPublishedLocation', []);

        return parent::getPublishedLocation();
    }

    /**
     * {@inheritDoc}
     */
    public function setPublishedLocation($publishedLocation): \App\Entity\Occurrence
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPublishedLocation', [$publishedLocation]);

        return parent::setPublishedLocation($publishedLocation);
    }

    /**
     * {@inheritDoc}
     */
    public function getLocationAccuracy()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLocationAccuracy', []);

        return parent::getLocationAccuracy();
    }

    /**
     * {@inheritDoc}
     */
    public function setLocationAccuracy($locationAccuracy): \App\Entity\Occurrence
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLocationAccuracy', [$locationAccuracy]);

        return parent::setLocationAccuracy($locationAccuracy);
    }

    /**
     * {@inheritDoc}
     */
    public function getVlLocationAccuracy()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVlLocationAccuracy', []);

        return parent::getVlLocationAccuracy();
    }

    /**
     * {@inheritDoc}
     */
    public function setVlLocationAccuracy($vlLocationAccuracy): \App\Entity\Occurrence
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setVlLocationAccuracy', [$vlLocationAccuracy]);

        return parent::setVlLocationAccuracy($vlLocationAccuracy);
    }

    /**
     * {@inheritDoc}
     */
    public function setGeometry(?string $geometry): \App\Entity\Occurrence
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setGeometry', [$geometry]);

        return parent::setGeometry($geometry);
    }

    /**
     * {@inheritDoc}
     */
    public function getGeometry(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGeometry', []);

        return parent::getGeometry();
    }

    /**
     * {@inheritDoc}
     */
    public function setCentroid(?string $centroid): \App\Entity\Occurrence
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCentroid', [$centroid]);

        return parent::setCentroid($centroid);
    }

    /**
     * {@inheritDoc}
     */
    public function getCentroid(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCentroid', []);

        return parent::getCentroid();
    }

    /**
     * {@inheritDoc}
     */
    public function getElevation(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getElevation', []);

        return parent::getElevation();
    }

    /**
     * {@inheritDoc}
     */
    public function setElevation(?int $elevation): \App\Entity\Occurrence
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setElevation', [$elevation]);

        return parent::setElevation($elevation);
    }

    /**
     * {@inheritDoc}
     */
    public function getIsElevationEstimated(): ?bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsElevationEstimated', []);

        return parent::getIsElevationEstimated();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsElevationEstimated(?bool $isElevationEstimated): \App\Entity\Occurrence
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsElevationEstimated', [$isElevationEstimated]);

        return parent::setIsElevationEstimated($isElevationEstimated);
    }

    /**
     * {@inheritDoc}
     */
    public function getOsmCounty(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOsmCounty', []);

        return parent::getOsmCounty();
    }

    /**
     * {@inheritDoc}
     */
    public function setOsmCounty(?string $osmCounty): \App\Entity\Occurrence
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOsmCounty', [$osmCounty]);

        return parent::setOsmCounty($osmCounty);
    }

    /**
     * {@inheritDoc}
     */
    public function getOsmState(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOsmState', []);

        return parent::getOsmState();
    }

    /**
     * {@inheritDoc}
     */
    public function setOsmState(?string $osmState): \App\Entity\Occurrence
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOsmState', [$osmState]);

        return parent::setOsmState($osmState);
    }

    /**
     * {@inheritDoc}
     */
    public function getOsmPostcode(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOsmPostcode', []);

        return parent::getOsmPostcode();
    }

    /**
     * {@inheritDoc}
     */
    public function setOsmPostcode(?string $osmPostcode): \App\Entity\Occurrence
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOsmPostcode', [$osmPostcode]);

        return parent::setOsmPostcode($osmPostcode);
    }

    /**
     * {@inheritDoc}
     */
    public function getOsmCountry(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOsmCountry', []);

        return parent::getOsmCountry();
    }

    /**
     * {@inheritDoc}
     */
    public function setOsmCountry(?string $osmCountry): \App\Entity\Occurrence
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOsmCountry', [$osmCountry]);

        return parent::setOsmCountry($osmCountry);
    }

    /**
     * {@inheritDoc}
     */
    public function getOsmCountryCode(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOsmCountryCode', []);

        return parent::getOsmCountryCode();
    }

    /**
     * {@inheritDoc}
     */
    public function setOsmCountryCode(?string $osmCountryCode): \App\Entity\Occurrence
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOsmCountryCode', [$osmCountryCode]);

        return parent::setOsmCountryCode($osmCountryCode);
    }

    /**
     * {@inheritDoc}
     */
    public function getOsmId(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOsmId', []);

        return parent::getOsmId();
    }

    /**
     * {@inheritDoc}
     */
    public function setOsmId(?string $osmId): \App\Entity\Occurrence
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOsmId', [$osmId]);

        return parent::setOsmId($osmId);
    }

    /**
     * {@inheritDoc}
     */
    public function getOsmPlaceId(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOsmPlaceId', []);

        return parent::getOsmPlaceId();
    }

    /**
     * {@inheritDoc}
     */
    public function setOsmPlaceId(?int $osmPlaceId): \App\Entity\Occurrence
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOsmPlaceId', [$osmPlaceId]);

        return parent::setOsmPlaceId($osmPlaceId);
    }

    /**
     * {@inheritDoc}
     */
    public function getFrenchDep(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFrenchDep', []);

        return parent::getFrenchDep();
    }

    /**
     * {@inheritDoc}
     */
    public function getIdentiplanteScore(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdentiplanteScore', []);

        return parent::getIdentiplanteScore();
    }

    /**
     * {@inheritDoc}
     */
    public function setIdentiplanteScore(?int $identiplanteScore): \App\Entity\Occurrence
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIdentiplanteScore', [$identiplanteScore]);

        return parent::setIdentiplanteScore($identiplanteScore);
    }

    /**
     * {@inheritDoc}
     */
    public function getIsIdentiplanteValidated(): ?bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsIdentiplanteValidated', []);

        return parent::getIsIdentiplanteValidated();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsIdentiplanteValidated(bool $isIdentiplanteValidated): \App\Entity\Occurrence
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsIdentiplanteValidated', [$isIdentiplanteValidated]);

        return parent::setIsIdentiplanteValidated($isIdentiplanteValidated);
    }

    /**
     * {@inheritDoc}
     */
    public function getIdentificationAuthor(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdentificationAuthor', []);

        return parent::getIdentificationAuthor();
    }

    /**
     * {@inheritDoc}
     */
    public function setIdentificationAuthor(?string $identificationAuthor): \App\Entity\Occurrence
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIdentificationAuthor', [$identificationAuthor]);

        return parent::setIdentificationAuthor($identificationAuthor);
    }

    /**
     * {@inheritDoc}
     */
    public function getProject(): ?\App\Entity\TelaBotanicaProject
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProject', []);

        return parent::getProject();
    }

    /**
     * {@inheritDoc}
     */
    public function setProject(?\App\Entity\TelaBotanicaProject $project): \App\Entity\Occurrence
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setProject', [$project]);

        return parent::setProject($project);
    }

    /**
     * {@inheritDoc}
     */
    public function getPhotos(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPhotos', []);

        return parent::getPhotos();
    }

    /**
     * {@inheritDoc}
     */
    public function addPhoto(\App\Entity\Photo $photo): \App\Entity\Occurrence
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addPhoto', [$photo]);

        return parent::addPhoto($photo);
    }

    /**
     * {@inheritDoc}
     */
    public function removePhoto(\App\Entity\Photo $photo): \App\Entity\Occurrence
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removePhoto', [$photo]);

        return parent::removePhoto($photo);
    }

    /**
     * {@inheritDoc}
     */
    public function getVlObservers(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVlObservers', []);

        return parent::getVlObservers();
    }

    /**
     * {@inheritDoc}
     */
    public function addVlObserver(\App\Entity\Observer $observer): \App\Entity\Occurrence
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addVlObserver', [$observer]);

        return parent::addVlObserver($observer);
    }

    /**
     * {@inheritDoc}
     */
    public function removeVlObserver(\App\Entity\Observer $observer): \App\Entity\Occurrence
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeVlObserver', [$observer]);

        return parent::removeVlObserver($observer);
    }

    /**
     * {@inheritDoc}
     */
    public function getVlWorkspace(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVlWorkspace', []);

        return parent::getVlWorkspace();
    }

    /**
     * {@inheritDoc}
     */
    public function setVlWorkspace(?string $vlWorkspace): \App\Entity\Occurrence
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setVlWorkspace', [$vlWorkspace]);

        return parent::setVlWorkspace($vlWorkspace);
    }

    /**
     * {@inheritDoc}
     */
    public function getValidations(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getValidations', []);

        return parent::getValidations();
    }

    /**
     * {@inheritDoc}
     */
    public function addValidation(\App\Entity\OccurrenceValidation $validation): \App\Entity\Occurrence
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addValidation', [$validation]);

        return parent::addValidation($validation);
    }

    /**
     * {@inheritDoc}
     */
    public function removeValidation(\App\Entity\OccurrenceValidation $validation): \App\Entity\Occurrence
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeValidation', [$validation]);

        return parent::removeValidation($validation);
    }

    /**
     * {@inheritDoc}
     */
    public function getVlBiblioSource(): ?\App\Entity\BiblioPhyto
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVlBiblioSource', []);

        return parent::getVlBiblioSource();
    }

    /**
     * {@inheritDoc}
     */
    public function setVlBiblioSource(?\App\Entity\BiblioPhyto $biblioPhyto): \App\Entity\Occurrence
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setVlBiblioSource', [$biblioPhyto]);

        return parent::setVlBiblioSource($biblioPhyto);
    }

    /**
     * {@inheritDoc}
     */
    public function getUserTagRelations(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUserTagRelations', []);

        return parent::getUserTagRelations();
    }

    /**
     * {@inheritDoc}
     */
    public function addUserTagRelation(\App\Entity\OccurrenceUserOccurrenceTagRelation $userTagRelation): \App\Entity\Occurrence
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addUserTagRelation', [$userTagRelation]);

        return parent::addUserTagRelation($userTagRelation);
    }

    /**
     * {@inheritDoc}
     */
    public function removeUserTagRelation(\App\Entity\OccurrenceUserOccurrenceTagRelation $userTagRelation): \App\Entity\Occurrence
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeUserTagRelation', [$userTagRelation]);

        return parent::removeUserTagRelation($userTagRelation);
    }

    /**
     * {@inheritDoc}
     */
    public function getUserOccurrenceTags(): array
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUserOccurrenceTags', []);

        return parent::getUserOccurrenceTags();
    }

    /**
     * {@inheritDoc}
     */
    public function getUserOccurrenceTagRelations(): array
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUserOccurrenceTagRelations', []);

        return parent::getUserOccurrenceTagRelations();
    }

    /**
     * {@inheritDoc}
     */
    public function getExtendedFieldOccurrences(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getExtendedFieldOccurrences', []);

        return parent::getExtendedFieldOccurrences();
    }

    /**
     * {@inheritDoc}
     */
    public function addExtendedFieldOccurrence(\App\Entity\ExtendedFieldOccurrence $extendedFieldOccurrence): \App\Entity\Occurrence
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addExtendedFieldOccurrence', [$extendedFieldOccurrence]);

        return parent::addExtendedFieldOccurrence($extendedFieldOccurrence);
    }

    /**
     * {@inheritDoc}
     */
    public function removeExtendedFieldOccurrence(\App\Entity\ExtendedFieldOccurrence $extendedFieldOccurrence): \App\Entity\Occurrence
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeExtendedFieldOccurrence', [$extendedFieldOccurrence]);

        return parent::removeExtendedFieldOccurrence($extendedFieldOccurrence);
    }

    /**
     * {@inheritDoc}
     */
    public function generateSignature($userId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'generateSignature', [$userId]);

        return parent::generateSignature($userId);
    }

    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', []);

        return parent::__toString();
    }

    /**
     * {@inheritDoc}
     */
    public function getSyes(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSyes', []);

        return parent::getSyes();
    }

    /**
     * {@inheritDoc}
     */
    public function addSye(\App\Entity\Sye $sye): \App\Entity\Occurrence
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addSye', [$sye]);

        return parent::addSye($sye);
    }

    /**
     * {@inheritDoc}
     */
    public function removeSye(\App\Entity\Sye $sye): \App\Entity\Occurrence
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeSye', [$sye]);

        return parent::removeSye($sye);
    }

}
