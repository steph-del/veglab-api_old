<?php

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

// This file has been auto-generated by the Symfony Dependency Injection Component for internal use.
// Returns the private 'Fresh\VichUploaderSerializationBundle\EventListener\JmsSerializerSubscriber' shared autowired service.

include_once \dirname(__DIR__, 4).'/vendor/jms/serializer/src/JMS/Serializer/EventDispatcher/EventSubscriberInterface.php';
include_once \dirname(__DIR__, 4).'/vendor/fresh/vich-uploader-serialization-bundle/EventListener/JmsSerializerSubscriber.php';

$a = new \Symfony\Bridge\Monolog\Logger('vich_uploader_serialization');
$a->pushProcessor(($this->privates['debug.log_processor'] ?? $this->getDebug_LogProcessorService()));
$a->pushHandler(($this->privates['monolog.handler.console'] ?? $this->getMonolog_Handler_ConsoleService()));
$a->pushHandler(($this->privates['monolog.handler.main'] ?? $this->getMonolog_Handler_MainService()));
\Symfony\Bundle\FrameworkBundle\DependencyInjection\Compiler\AddDebugLogProcessorPass::configureLogger($a);

return $this->privates['Fresh\\VichUploaderSerializationBundle\\EventListener\\JmsSerializerSubscriber'] = new \Fresh\VichUploaderSerializationBundle\EventListener\JmsSerializerSubscriber(($this->privates['vich_uploader.storage.file_system'] ?? $this->getVichUploader_Storage_FileSystemService()), ($this->privates['router.request_context'] ?? $this->getRouter_RequestContextService()), ($this->privates['annotations.cached_reader'] ?? $this->getAnnotations_CachedReaderService()), ($this->privates['property_accessor'] ?? $this->getPropertyAccessorService()), $a);
