<?php //%255BApp%255CEntity%255CPhoto%255D%255B1%255D

return [PHP_INT_MAX, static function () { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['ApiPlatform\\Core\\Annotation\\ApiResource'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('ApiPlatform\\Core\\Annotation\\ApiResource')),
        clone ($p['Doctrine\\ORM\\Mapping\\Entity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Entity')),
        clone ($p['Doctrine\\ORM\\Mapping\\Table'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Table')),
        clone ($p['Doctrine\\ORM\\Mapping\\Index'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Index')),
        clone ($p['Vich\\UploaderBundle\\Mapping\\Annotation\\Uploadable'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Vich\\UploaderBundle\\Mapping\\Annotation\\Uploadable')),
    ],
    null,
    [
        'stdClass' => [
            'collectionOperations' => [
                [
                    'get',
                    'post' => [
                        'method' => 'POST',
                        'controller' => 'App\\Controller\\CreatePhotoAction',
                        'defaults' => [
                            '_api_receive' => false,
                        ],
                    ],
                    'bulk' => [
                        'method' => 'PATCH',
                        'controller' => 'App\\Controller\\PhotoBulkAction',
                        'swagger_context' => [
                            'parameters' => [],
                            'responses' => [
                                207 => [
                                    'description' => 'The bulk operation was performed succesfully.',
                                ],
                                500 => [
                                    'description' => 'An error occured during bulk operation.',
                                ],
                            ],
                            'summary' => 'Bulk treatment for DELETE and UPDATE operations for CEL2 photo resources.',
                            'consumes' => 'json-patch+json',
                            'produces' => 'application/json',
                        ],
                    ],
                    'import' => [
                        'method' => 'GET',
                        'path' => '/photos/download',
                        'controller' => 'App\\Controller\\ServeZippedPhotosAction',
                        'swagger_context' => [
                            'parameters' => [],
                            'responses' => [
                                207 => [
                                    'description' => 'The import was performed succesfully.',
                                ],
                                500 => [
                                    'description' => 'An error occured while constructing or serving the zip archive.',
                                ],
                            ],
                            'summary' => 'Serves zipped photos.',
                            'produces' => 'application/zip',
                        ],
                    ],
                ],
            ],
            'itemOperations' => [
                [
                    'get' => [
                        'method' => 'GET',
                        'access_control' => 'is_granted(\'view\', object)',
                    ],
                    'patch' => [
                        'method' => 'PATCH',
                        'access_control' => 'is_granted(\'edit\', object)',
                    ],
                    'put' => [
                        'method' => 'PUT',
                        'access_control' => 'is_granted(\'edit\', object)',
                    ],
                    'delete' => [
                        'method' => 'DELETE',
                        'access_control' => 'is_granted(\'delete\', object)',
                    ],
                ],
            ],
            'attributes' => [
                [
                    'normalization_context' => [
                        'groups' => [
                            'photo_read',
                        ],
                    ],
                    'denormalization_context' => [
                        'groups' => [
                            'write',
                        ],
                    ],
                    'formats' => [
                        'jsonld',
                        'json',
                        'jsonpatch' => [
                            'application/json-patch+json',
                        ],
                    ],
                    'filters' => [
                        'App\\Filter\\Photo\\IsPublicFilter',
                        'App\\Filter\\Photo\\CertaintyFilter',
                        'DateShotYearFilter',
                        'DateShotMonthFilter',
                        'DateShotDayFilter',
                        'App\\Filter\\Photo\\DateObservedYearFilter',
                        'App\\Filter\\Photo\\DateObservedMonthFilter',
                        'App\\Filter\\Photo\\DateObservedDayFilter',
                        'App\\Filter\\Photo\\UserSciNameFilter',
                        'App\\Filter\\Photo\\CountryFilter',
                        'App\\Filter\\Photo\\CountyFilter',
                        'App\\Filter\\Photo\\FamilyFilter',
                        'App\\Filter\\Photo\\ProjectIdFilter',
                        'TagFilter',
                    ],
                ],
            ],
            'repositoryClass' => [
                1 => 'App\\Repository\\PhotoRepository',
            ],
            'name' => [
                2 => 'photo',
                'user_id_idx',
            ],
            'indexes' => [
                2 => [
                    $o[3],
                ],
            ],
            'options' => [
                2 => [
                    'comment' => 'Les noms originaux doivent Ãªtre uniques pour un mÃªme utilisateur.',
                ],
            ],
            'columns' => [
                3 => [
                    'user_id',
                ],
            ],
        ],
    ],
    [
        $o[0],
        $o[1],
        $o[2],
        $o[4],
    ],
    []
); }];
