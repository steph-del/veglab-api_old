<?php //%255BApp%255CEntity%255CTableRowDefinition%255D%255B1%255D

return [PHP_INT_MAX, static function () { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['ApiPlatform\\Core\\Annotation\\ApiResource'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('ApiPlatform\\Core\\Annotation\\ApiResource')),
        clone ($p['Doctrine\\ORM\\Mapping\\Entity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Entity')),
        clone ($p['Doctrine\\ORM\\Mapping\\Table'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Table')),
        clone ($p['JMS\\Serializer\\Annotation\\ExclusionPolicy'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\ExclusionPolicy')),
    ],
    null,
    [
        'stdClass' => [
            'collectionOperations' => [
                [
                    'get' => [
                        'method' => 'GET',
                    ],
                    'post' => [
                        'method' => 'POST',
                    ],
                ],
            ],
            'itemOperations' => [
                [
                    'get' => [
                        'method' => 'GET',
                    ],
                    'patch' => [
                        'method' => 'PATCH',
                    ],
                    'put' => [
                        'method' => 'PUT',
                        'denormalization_context' => [
                            'groups' => [
                                'write:put',
                            ],
                        ],
                    ],
                    'delete' => [
                        'method' => 'DELETE',
                    ],
                ],
            ],
            'attributes' => [
                [
                    'normalization_context' => [
                        'groups' => [
                            'read',
                        ],
                    ],
                    'denormalization_context' => [
                        'groups' => [
                            'write',
                        ],
                    ],
                ],
            ],
            'repositoryClass' => [
                1 => 'App\\Repository\\TableRowDefinitionRepository',
            ],
            'name' => [
                2 => 'vl_table_row_definition',
            ],
            'policy' => [
                3 => 'NONE',
            ],
        ],
    ],
    [
        $o[0],
        $o[1],
        $o[2],
        $o[3],
    ],
    []
); }];
