<?php

namespace Proxies\__CG__\App\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class TableRowDefinition extends \App\Entity\TableRowDefinition implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'App\\Entity\\TableRowDefinition' . "\0" . 'id', '' . "\0" . 'App\\Entity\\TableRowDefinition' . "\0" . 'rowId', '' . "\0" . 'App\\Entity\\TableRowDefinition' . "\0" . 'type', '' . "\0" . 'App\\Entity\\TableRowDefinition' . "\0" . 'groupId', '' . "\0" . 'App\\Entity\\TableRowDefinition' . "\0" . 'groupTitle', '' . "\0" . 'App\\Entity\\TableRowDefinition' . "\0" . 'layer', '' . "\0" . 'App\\Entity\\TableRowDefinition' . "\0" . 'displayName', '' . "\0" . 'App\\Entity\\TableRowDefinition' . "\0" . 'repository', '' . "\0" . 'App\\Entity\\TableRowDefinition' . "\0" . 'repositoryIdNomen', '' . "\0" . 'App\\Entity\\TableRowDefinition' . "\0" . 'repositoryIdTaxo', '' . "\0" . 'App\\Entity\\TableRowDefinition' . "\0" . '_table'];
        }

        return ['__isInitialized__', '' . "\0" . 'App\\Entity\\TableRowDefinition' . "\0" . 'id', '' . "\0" . 'App\\Entity\\TableRowDefinition' . "\0" . 'rowId', '' . "\0" . 'App\\Entity\\TableRowDefinition' . "\0" . 'type', '' . "\0" . 'App\\Entity\\TableRowDefinition' . "\0" . 'groupId', '' . "\0" . 'App\\Entity\\TableRowDefinition' . "\0" . 'groupTitle', '' . "\0" . 'App\\Entity\\TableRowDefinition' . "\0" . 'layer', '' . "\0" . 'App\\Entity\\TableRowDefinition' . "\0" . 'displayName', '' . "\0" . 'App\\Entity\\TableRowDefinition' . "\0" . 'repository', '' . "\0" . 'App\\Entity\\TableRowDefinition' . "\0" . 'repositoryIdNomen', '' . "\0" . 'App\\Entity\\TableRowDefinition' . "\0" . 'repositoryIdTaxo', '' . "\0" . 'App\\Entity\\TableRowDefinition' . "\0" . '_table'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (TableRowDefinition $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId(): ?int
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getRowId(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRowId', []);

        return parent::getRowId();
    }

    /**
     * {@inheritDoc}
     */
    public function setRowId(int $rowId): \App\Entity\TableRowDefinition
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRowId', [$rowId]);

        return parent::setRowId($rowId);
    }

    /**
     * {@inheritDoc}
     */
    public function getType(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getType', []);

        return parent::getType();
    }

    /**
     * {@inheritDoc}
     */
    public function setType(string $type): \App\Entity\TableRowDefinition
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setType', [$type]);

        return parent::setType($type);
    }

    /**
     * {@inheritDoc}
     */
    public function getGroupId(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGroupId', []);

        return parent::getGroupId();
    }

    /**
     * {@inheritDoc}
     */
    public function setGroupId(int $groupId): \App\Entity\TableRowDefinition
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setGroupId', [$groupId]);

        return parent::setGroupId($groupId);
    }

    /**
     * {@inheritDoc}
     */
    public function getGroupTitle(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGroupTitle', []);

        return parent::getGroupTitle();
    }

    /**
     * {@inheritDoc}
     */
    public function setGroupTitle(string $groupTitle): \App\Entity\TableRowDefinition
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setGroupTitle', [$groupTitle]);

        return parent::setGroupTitle($groupTitle);
    }

    /**
     * {@inheritDoc}
     */
    public function getLayer(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLayer', []);

        return parent::getLayer();
    }

    /**
     * {@inheritDoc}
     */
    public function setLayer(?string $layer): \App\Entity\TableRowDefinition
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLayer', [$layer]);

        return parent::setLayer($layer);
    }

    /**
     * {@inheritDoc}
     */
    public function getDisplayName(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDisplayName', []);

        return parent::getDisplayName();
    }

    /**
     * {@inheritDoc}
     */
    public function setDisplayName(string $displayName): \App\Entity\TableRowDefinition
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDisplayName', [$displayName]);

        return parent::setDisplayName($displayName);
    }

    /**
     * {@inheritDoc}
     */
    public function getRepository(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRepository', []);

        return parent::getRepository();
    }

    /**
     * {@inheritDoc}
     */
    public function setRepository(?string $repository): \App\Entity\TableRowDefinition
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRepository', [$repository]);

        return parent::setRepository($repository);
    }

    /**
     * {@inheritDoc}
     */
    public function getRepositoryIdNomen(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRepositoryIdNomen', []);

        return parent::getRepositoryIdNomen();
    }

    /**
     * {@inheritDoc}
     */
    public function setRepositoryIdNomen(?int $repositoryIdNomen): \App\Entity\TableRowDefinition
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRepositoryIdNomen', [$repositoryIdNomen]);

        return parent::setRepositoryIdNomen($repositoryIdNomen);
    }

    /**
     * {@inheritDoc}
     */
    public function getRepositoryIdTaxo(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRepositoryIdTaxo', []);

        return parent::getRepositoryIdTaxo();
    }

    /**
     * {@inheritDoc}
     */
    public function setRepositoryIdTaxo(?string $repositoryIdTaxo): \App\Entity\TableRowDefinition
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRepositoryIdTaxo', [$repositoryIdTaxo]);

        return parent::setRepositoryIdTaxo($repositoryIdTaxo);
    }

    /**
     * {@inheritDoc}
     */
    public function getTable(): ?\App\Entity\Table
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTable', []);

        return parent::getTable();
    }

    /**
     * {@inheritDoc}
     */
    public function setTable(?\App\Entity\Table $_table): \App\Entity\TableRowDefinition
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTable', [$_table]);

        return parent::setTable($_table);
    }

}
